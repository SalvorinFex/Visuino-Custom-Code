//----------------------------------------------
//
//        Sketch Generated by Visuino
//              www.visuino.com
//          Version 7.8.2.301
//
//------------------ Source --------------------
//
// ...Custom_Code_-_What_goes_where_in_the_properties.visuino
//
//----------------------------------------------

#define VISUINO_WEMOS_D1_R2
#define VISUINO_ESP8266

#include <OpenWire.h>
#include <Mitov.h>
// ******************* This is my Includes property in Custom Component *******************

// Custom Code Declarations

namespace CustomCode
{
  class TCustomCode1
  {
// ******************* This is my Members property in Custom Component *******************

  public:
    void SystemInit();

  public:
    void SystemStart();

  public:
    void SystemLoopBegin();

  public:
    void SystemLoopUpdateHardware();

  };
} // CustomCode

// Declarations

namespace Declarations
{
CustomCode::TCustomCode1 _o_CustomCode1;

} // Declarations

// Custom Code Implementations

namespace CustomCode
{
void TCustomCode1::SystemInit()
{
// ******************* This is my On Init property in Custom Component *******************
}

void TCustomCode1::SystemStart()
{
// ******************* This is my On Start property in Custom Component *******************
}

void TCustomCode1::SystemLoopBegin()
{
// ******************* This is my On Execute property in Custom Component *******************
}

void TCustomCode1::SystemLoopUpdateHardware()
{
// ******************* This is my On Update Hardware property in Custom Component *******************
}

} // CustomCode

namespace ComponentsHardware
{
void SystemUpdateHardware()
{
  Declarations::_o_CustomCode1.SystemLoopUpdateHardware();
}
} // ComponentsHardware

//The setup function is called once at startup of the sketch
void setup()
{
  Declarations::_o_CustomCode1.SystemInit();
  Declarations::_o_CustomCode1.SystemStart();

  OpenWire::SystemStarted();
}

// The loop function is called in an endless loop
void loop()
{
  Declarations::_o_CustomCode1.SystemLoopBegin();

  ComponentsHardware::SystemUpdateHardware();
}
